.ifndef CHARCODES_INC
CHARCODES_INC  = 1
; ================================
char_pattern_code:
; char($20)
;punctuation
;  (blank)
.byte $00, $00, $00, $00, $00, $00
;  !
.byte $0A, $4A, $04, $44, $06, $46
;  "
.byte $0D, $4D, $00, $00, $00, $00
;  #
.byte $0D, $4D, $1F, $5F, $0D, $4D
;  $
.byte $84, $C9, $20, $E0, $09, $44
;  %
.byte $13, $D5, $13, $D3, $15, $D3
;  &
.byte $01, $CB, $21, $66, $81, $C7
;  '
.byte $04, $4A, $0C, $00, $00, $00
;  (
.byte $06, $4B, $22, $00, $86, $CB
;  )
.byte $0B, $46, $00, $62, $8B, $C6
;  *
.byte $0E, $4E, $41, $01, $8E, $CE
;  +
.byte $06, $46, $18, $58, $86, $C6
;  ,
.byte $00, $00, $23, $5A, $8B, $C6
;  -
.byte $00, $00, $11, $51, $00, $00
;  .
.byte $00, $00, $00, $00, $43, $4F
;  /
.byte $00, $D5, $13, $D3, $15, $00
; ================================
; char($30)
; num_pattern_codes:
;  0
.byte $01, $41, $87, $47, $81, $C1
;  1
.byte $06, $CC, $00, $62, $00, $4D
;  2
.byte $01, $41, $0D, $4A, $14, $85
;  3
.byte $01, $41, $0E, $50, $81, $C1
;  4
.byte $06, $CC, $24, $65, $00, $4D
;  5
.byte $02, $45, $08, $C8, $81, $C1
;  6
.byte $01, $41, $01, $C8, $81, $C1
;  7
.byte $05, $42, $0F, $57, $0A, $4A
;  8
.byte $01, $41, $10, $50, $81, $C1
;  9
.byte $01, $41, $08, $41, $81, $C1
;  :
.byte $06, $46, $00, $00, $86, $C6
;  ;
.byte $D5, $46, $27, $55, $8B, $C6
;  <
.byte $06, $4B, $34, $00, $86, $CB
;  =
.byte $00, $00, $12, $52, $00, $00
;  >
.byte $0B, $46, $00, $74, $8B, $C6
;  ?
.byte $01, $41, $1A, $4A, $06, $46
; ================================
; char($40)
characters:
; @
.byte $01, $41, $1D, $5E, $12, $52
;  A
.byte $01, $41, $01, $41, $03, $43
;  B
.byte $02, $41, $01, $50, $82, $C1
;  C
.byte $01, $41, $02, $00, $81, $C1
;  D
.byte $02, $41, $02, $42, $82, $C1
;  E
.byte $02, $05, $01, $11, $82, $85
;  F
.byte $02, $05, $01, $11, $03, $00
;  G
.byte $01, $41, $03, $54, $81, $C1
;  H
.byte $03, $43, $01, $41, $03, $43
;  I
.byte $04, $44, $04, $44, $84, $C4
;  J
.byte $04, $44, $04, $44, $07, $51
;  K
.byte $03, $48, $05, $55, $83, $C8
;  L
.byte $03, $00, $02, $00, $82, $85
;  M
.byte $10, $50, $06, $46, $03, $43
;  N
.byte $03, $43, $07, $C7, $03, $43
;  O
.byte $01, $41, $02, $42, $81, $C1
;=================================
; char($50)
;  P
.byte $02, $41, $01, $48, $03, $00
;  Q
.byte $01, $41, $86, $C6, $81, $C7
;  R
.byte $02, $41, $01, $50, $03, $43
;  S
.byte $01, $41, $08, $C8, $81, $C1
;  T
.byte $09, $49, $04, $44, $0A, $4A
;  U
.byte $03, $43, $02, $42, $81, $C1
;  V
.byte $03, $43, $02, $42, $0B, $4B
;  W
.byte $03, $43, $86, $C6, $90, $D0
;  X
.byte $03, $43, $09, $49, $03, $43
;  Y
.byte $03, $43, $0A, $4A, $0A, $4A
;  Z
.byte $05, $42, $13, $D3, $82, $85
;  [
.byte $02, $51, $02, $00, $82, $D1
;  â‚¬
.byte $8B, $45, $1F, $67, $0B, $C5
;  ]
.byte $11, $42, $00, $42, $91, $C2
;  ^
.byte $06, $46, $1C, $5C, $86, $C6
;  _
.byte $00, $00, $00, $00, $85, $C5
; ================================
; char($60)
lower_case:
; `
.byte $0B, $46, $00, $4C, $00, $00
;a
.byte $00, $00, $27, $68, $81, $C2
;b
.byte $03, $00, $29, $6A, $82, $C1
;c
.byte $00, $00, $2A, $E3, $81, $C1
;d
.byte $00, $43, $2A, $69, $81, $C2
;e
.byte $00, $00, $28, $68, $81, $95
;f
.byte $8B, $CB, $1B, $6B, $0D, $00
;g
.byte $00, $00, $28, $EC, $D5, $C1
;h
.byte $03, $00, $29, $6A, $03, $43
;i
.byte $86, $C6, $2D, $44, $84, $C4
;j
.byte $00, $57, $9A, $6F, $81, $4B
;k
.byte $03, $00, $87, $D3, $18, $CB
;l
.byte $04, $4A, $04, $44, $84, $C4
;m
.byte $00, $00, $30, $6E, $19, $59
;n
.byte $00, $00, $29, $6A, $03, $43
;o
.byte $00, $00, $2A, $6A, $81, $C1
; char($70)
;p
.byte $00, $00, $2C, $10, $03, $00
;q
.byte $00, $00, $50, $71, $00, $43
;r
.byte $00, $00, $29, $08, $03, $00
;s
.byte $00, $00, $50, $67, $C5, $C1
;t
.byte $0D, $00, $A5, $DA, $0B, $C1
;u
.byte $00, $00, $02, $42, $81, $56
;v
.byte $00, $00, $02, $42, $0B, $4B
;w
.byte $00, $00, $86, $C6, $07, $47
;x
.byte $00, $00, $0A, $4A, $88, $C8
;y
.byte $00, $00, $AA, $56, $D5, $C1
;z
.byte $00, $00, $32, $73, $14, $85
;{
.byte $06, $4B, $19, $55, $86, $CB
;|
.byte $0F, $4F, $04, $44, $0A, $4A
;}
.byte $0B, $D1, $15, $59, $8B, $C6
;  ->
.byte $06, $46, $11, $5B, $86, $C6
;  <- char($7F)
.byte $06, $46, $1B, $51, $86, $C6
;=================================
special_chars:
; 00 durchgehende klammer links
.byte $02, $05, $02, $00, $82, $85
; 01 durchgehende klammer rechts
.byte $45, $42, $00, $42, $85, $C2
; 02 querstreifen oben u. unten
.byte $05, $05, $00, $00, $85, $85
; 03 rechteck:
.byte $02, $42, $02, $42, $82, $C2
; 04 kleiner Punkt unten
.byte $00, $00, $00, $00, $06, $46
; 05 grosser Punkt unten
.byte $00, $00, $23, $63, $43, $03
; 06 trennline senkrecht ganz links
.byte $03, $00, $02, $00, $03, $00
; 07 \ back slash
.byte $95, $00, $93, $53, $00, $55
;  /
;.byte $00, $D5, $13, $D3, $15, $00
;=================================
.endif
